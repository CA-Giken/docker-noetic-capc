def SUB_104RXFF():
  global _hidden_verificationVariable=0
  step_count_e8bbd07a_1491_425b_88a0_a25e8196bdf4 = 0.0
  thread Step_Counter_Thread_9c178ea9_0337_4eb7_99af_d284f780805f():
    while (True):
      step_count_e8bbd07a_1491_425b_88a0_a25e8196bdf4 = step_count_e8bbd07a_1491_425b_88a0_a25e8196bdf4 + 1.0
      sync()
    end
  end
  run Step_Counter_Thread_9c178ea9_0337_4eb7_99af_d284f780805f()
  set_safety_mode_transition_hardness(1)
  set_standard_analog_input_domain(0, 1)
  set_standard_analog_input_domain(1, 1)
  set_tool_analog_input_domain(0, 1)
  set_tool_analog_input_domain(1, 1)
  set_analog_outputdomain(0, 0)
  set_analog_outputdomain(1, 0)
  set_input_actions_to_default()
  set_runstate_gp_boolean_output_to_value(0, 3)
  set_tool_communication(False, 115200, 0, 1, 1.5, 3.5)
  set_tool_output_mode(0)
  set_tool_digital_output_mode(0, 1)
  set_tool_digital_output_mode(1, 1)
  set_tool_voltage(0)
  set_gravity([0.0, 0.0, 9.82])
  set_target_payload(0.100000, [0.135000, 0.000000, 0.225000], [10.000000, 10.000000, 10.000000, 0.000000, 0.000000, 0.000000])
  set_tcp(p[0.0,0.08,0.42,0.0,0.0,0.0])
  global DistPillar=0.31844
  global CandCnt=4
  global ReCaptZ=0.05
  global port=3000
  global socket_timeout=120
  global host="192.168.1.2"
  global is_popup=False
  global pBucket=[p[0.82659, 0.44816, 0.33949, 0, 0, -1.60738], p[-0.80303, -0.58776, 0.33809, 0, 0, 1.53213], p[0, 0, 0, 0, 0, 0]]
  global CaptStepZ=0.085
  global CaptIndex=[0, 0, 0]
  global pBucketM=p[-0.76064, -0.49997, 0.35503, 0, 0, 1.57135]
  global socket_name="vt"
  global rovi_err=0
  global SubPrgResult=100
  global CurrPos=p[0.00026, -0.37819, 0.45741, 0.75387, -2.94099, 0.24454]
  global CurrPos_p=p[-0.0606, -0.3839, 0.03425, 0.75387, -2.94099, 0.24454]
  global ForceStartZ=0.10776
  global CutOffZ=0.09
  global Sub3100_ZMax=0.74
  global ForceStartX=-0.90368
  global Sub3100_aRot=0.2
  global Sub3100_d=0.3
  global Sub3100_Option=4
  global Sub3100_a=0.2
  global Sub3100_XdV=0.1
  global Sub3100_XdRot=8
  global ZoneDistTh=0.05
  global BucketWidth=0.95
  global ZoneBucketGap=0
  global ZoneHomeX=0.2
  global UnloadZ=0.06
  global CaptPos=p[0.20973, -0.42576, 0.04497, 3.14135, 0.03459, 0]
  global BucketUpperPos=p[0.49973, -0.42592, 0.04497, 3.14138, 0.03448, 0.00005]
  global Sub3100_GPII18=4
  global Zone6ThX=0.1
  global Zone6ThY=0.05
  global pCV=p[-0.00176, -0.00092, 0.00022, 0.00004, 0.00033, 0.00185]
  global CaptRowNo=6
  global CrankDepthFull=0.025
  global CrankDepth=0.07693
  global Y1=[4, 318.44241, -0.22352, 4.98534]
  global Y2=p[-0.00991, -0.17019, -0.19006, -0.00523, 0.00441, -1.45247]
  global EvacRadiusTh=0.3
  global EvacXTh=[-0.5, 0.5]
  global EvacYTh=[-0.8, 1]
  global EvacZTh=[-0.1, 0.1]
  global WorkPosNo=1
  global Zone1ZTh=0.1
  global ReCaptNo=0
  global DistPillarBak=0.32299
  global CaptIndexWk=1
  global PoseSub=p[-0.02148, -0.22939, -0.00436, 0.05074, -0.02914, 0.06385]
  global PoseAdd=p[-0.8067, 0.08186, 0.44607, 2.10748, 2.25427, 0.02524]
  global RZTh=15
  global pBucketC=p[0.45, -0.8, 0.35, 0, 0, 3.1415]
  global ReCaptZWk=0
  global CheckMST=1
  global RZSub=3.65834
  global DistPillarCOTh=0.16
  global DistPillarAPTh=0.32
  global CutOffZAdd=0.20499
  global CutOffZDef=0.09
  global Y8=0
  global BKWidth_Value=[950, 1002, 0]
  global BKWidth_Name="/prepro/bucket_width"
  global LevelZ=-0.00022
  global NeighborZ=0.00499
  global Currpos_p_UF0=p[-0.00318, -0.33059, 0.10861, -0.02176, -3.14102, -0.00031]
  global TCPSpeed=p[-0.00003, 0.00007, -0.00001, 0.00013, 0.00006, 0]
  global Sub3100_Xd=[0, -0.1, 0, 0, 0, 0]
  global Sub3100_q=1
  global Sub3100_e=-1
  global Sub3100_t=0.5
  global IsShake=False
  global BeyondZ=0.2
  global ShakeCnt=0
  global IsSteady_01=False
  global IsSteady_02=True
  global HandInZ=0.05
  global TCPSpeedThZ=0.0005
  global ShakeWaitSec=1
  global CutOffPos=p[0, 0, 0, 1.10063, -2.81096, 0.22364]
  global RelMoveZ=0.075
  global Bucket=p[0.32604,0.49174,0.0,-1.882900624652718E-5,2.8304179127934987E-5,-1.593185305749222]
  global BucketM=p[0.32604,0.49174,0.0,2.2353980716304163E-16,-3.5868426080024975E-16,-1.5931853071795856]
  global CV=p[0.0,0.0,0.0,0.0,0.0,0.0]
  global CaptPoint_C=p[-0.335,0.0,0.4,-2.1962990605568957,-2.24628919093693,-5.664482558304294E-5]
  global CaptPoint_C2=p[0.32796661698047924,-0.010768520544682924,0.01931625281283378,2.2288103429550152,-2.213636886217198,8.598462540813273E-5]
  global CaptPoint_L=p[-0.335,-0.29,0.4,2.196198431950414,2.246349774520516,5.8693989933774055E-5]
  global CaptPoint_L2=p[0.327894307417917,-0.010799940826224014,0.01928712668893995,2.087717047309385,-2.0736781215133306,0.27365839887453103]
  global CaptPoint_R=p[-0.335,0.29,0.4,-2.1963472338807764,-2.2462285075856694,3.086531389441326E-5]
  global CaptPoint_R2=p[0.327926308680866,-0.010795166414457658,0.019300245403843563,-2.1186306375223185,2.1040550557443427,0.22023197678473694]
  global Capt_1BK_L=p[-0.395,-0.47,0.35,-2.1961210242572884,-2.2463362846055,-2.908274762447041E-4]
  global Capt_1BK_R=p[-0.395,0.51,0.35,2.196067754706757,2.246288285862388,2.8411291050601595E-5]
  global Capt_1BK_pos1=p[-0.4218793038724447,-0.003154429464978058,0.2915499891144615,-2.1963422029204875,-2.2438663520270015,-0.02197160668673838]
  global Capt_1BK_pos2=p[-0.42187829024618434,-0.0031710253373066375,0.29156503858953065,-2.196324918349679,-2.2439040699490773,-0.021928444416953782]
  global Capt_2BK_L=p[0.42186661528427194,0.4254738068040517,0.35042275762909847,2.239156309475874,-2.1837044610999294,0.002643817066643282]
  global Capt_2BK_R=p[0.4218208572756906,-0.5427676723257963,0.350372239919558,2.2392697861179327,-2.183553596194912,0.002410470905346486]
  global Capt_2BK_pos1=p[0.42193501458435656,0.004742683868356356,0.35045865974037793,2.2391012408536453,-2.1839704655717003,0.002677867056024068]
  global Capt_2BK_pos2=p[0.421903984494575,0.004707988774967922,0.35045218900915065,2.239114367170047,-2.183895515396197,0.002684056681074047]
  global Capt_CV_M=p[-0.04794223960540197,-0.559868557160475,0.1086937653706071,-0.022464429848058916,-3.141454018347238,4.0166993855964835E-4]
  global Capt_GD_M=p[-0.004053197679954899,-0.25261725691632436,-0.01970497430780127,0.0332779454553888,-3.140179196376707,-0.0034093680964018282]
  global HomePointL=p[-0.36789,-0.5117344641471838,0.78,-0.6278857271586024,3.0680899128661667,-8.649957362498864E-4]
  global Master_pos=p[-0.003,-0.27,0.109,-0.02099899522131702,-3.141447277644474,4.6083856157132165E-4]
  global Master_posL=p[-0.003,-0.27,0.109,0.02094395102393583,3.0543261909900803,-5.235987755386035E-4]
  global Master_posR=p[-0.003,-0.27,0.109,-0.019810987664379186,-3.054193931591229,4.952746915529204E-4]
  global PickPos=p[0.10830682331105715,-1.3709505888096256,-0.18404188875951455,-0.00622194000158997,2.880236948927292,-0.00383636509397631]
  global Solve=p[-0.00368,-0.0021000000000000003,0.25739999999999996,0.0,0.0,0.0]
  global TCP3100TL=p[0.0,0.08,0.42,1.8939999999999997,0.0,0.0]
  global TEST=p[0.1,0.0,0.2,0.0,0.0,0.0]
  global UF=p[0.0,0.0,0.0,0.0,0.0,0.0]
  global g1CV_posL1=p[0.05028133628211688,-0.4526481033729615,0.1221845548632916,-2.213335080948508,-2.1937561336067057,-0.3280056759040735]
  global g1CV_posR1=p[0.03743870476062511,-0.53119407812668,0.11301901343688614,2.073418671558482,2.153257467049566,0.11656306439039889]
  global g1GD_pos1=p[0.14857012745627257,-0.6379982996093139,0.2691918735517042,2.214277610229479,2.228493098198348,-1.6896832945346036E-4]
  global g1GD_pos2=p[0.028634297882679793,-0.4702313285867709,0.450031657325677,2.214319081558633,2.2285182736309666,-1.5473710223511705E-5]
  global g1GD_pos3=p[-0.1945307709581842,-0.42906455111749103,0.45,-2.685709191057467,-1.6297557787554324,7.112239955701245E-5]
  global g1GD_pos4=p[-0.25628841794770224,-0.020630481098425146,0.45,2.148716725221303,2.2918109407224354,-1.3854918368741778E-5]
  global g1GD_pos5=p[-0.714365317693782,-0.022971007293656684,0.45,-2.1476725881724037,-2.292771958266831,6.311233907547867E-5]
  global g1GD_posL1=p[-0.08276848269606216,-0.3996147100031649,0.1488453551331823,2.286527078917204,1.8420745504477611,0.33698451773695576]
  global g1GD_posL2=p[-0.3253977027403738,-0.3024804624281039,0.16332814085945146,2.72312820760317,0.9631021078169197,0.32447452035226126]
  global g1GD_posL3=p[-0.6791033397183219,0.06787475590683856,0.16337212788108813,2.1383125299263996,2.086116032377724,0.4536080263755059]
  global g1GD_posR1=p[-0.09893370538053747,-0.4999608954567234,0.14329885217724153,2.43311852414254,1.4238397520832589,0.08559216753941556]
  global g1GD_posR2=p[-0.3729565201882258,-0.3752983669473301,0.143299052800563,2.6951655216297596,0.8130506811102118,-0.02387549506099888]
  global g1GD_posR3=p[-0.7385929502572233,-0.029472684480355026,0.1499650660949685,2.0484522752014467,1.9493695704119496,0.18368227556562683]
  global g2CV_posL1=p[0.3409386496330911,-0.4656338066361442,0.1250074988128972,2.209372209162659,2.1945371304665926,0.3160714960040194]
  global g2CV_posR1=p[0.3400736278759575,-0.531334269888987,0.1183415684753657,2.07314649492589,2.1532617466521136,0.11638666128062146]
  global g2GD_pos1=p[0.2541383831722086,-0.6774928758666339,0.18519960582577166,-2.0375719953016755,-2.3889847960447277,-0.0020926217702447064]
  global g2GD_pos2=p[0.2548303032832998,-0.4395886120507379,0.2986557393825452,-1.8691601740155521,-2.5210138137905886,-0.00387894312889377]
  global g2GD_pos3=p[0.3379879014596998,-0.06467509721500111,0.3,-0.13681955358471554,3.138134920213652,0.0052602971824959885]
  global g2GD_pos4=p[0.31412137931928874,0.14047894136547145,0.3,1.0726627132331576,-2.952135651121033,-0.005044331815994264]
  global g2GD_pos5=p[0.596826867485263,0.012800854207951809,0.3,-2.250960447020382,2.191482163995288,-8.62049956035814E-5]
  global gCV_11_M=p[0.2895856132087369,-0.9700402997477822,-0.03048660701646616,2.1152349881492576,2.082454134650371,0.2907202126305862]
  global gCV_12_M=p[0.3399735651774522,-0.9701152791174454,-0.030398240983259495,2.1151309943729695,2.082422893849917,0.2905107745619789]
  global gCV_13_M=p[0.3677028242565019,-0.8912043588518235,0.06406475497489328,2.0725171273330782,1.9964853271438565,0.36457536397978224]
  global gCV_1_M=p[0.26662,-0.9702099878169796,-0.021959001781271192,-2.212353529315613,-2.2195544467592487,0.0323655800559973]
  global gCV_2_M=p[0.26859807289598814,-0.9702702137427199,0.029436000792852024,-2.212446744366122,-2.219572570655569,0.03244046687031327]
  global gCV_3_M=p[0.29099390607376485,-0.6570558385379063,0.0722153583041818,1.9884242634571576,2.2321538498123994,0.15249643504377583]
  global gCV_pos5=p[0.3400172856834047,-0.9722754606605235,-0.18287928563575456,2.073394561413637,2.1531827558666565,0.11639000988241816]
  global gGD_1_LM=p[0.02419,-0.7289500000000001,-0.11494,-0.010169347158913017,2.870767181856166,0.2884627079222753]
  global gGD_1_LM_RX=p[0.02416,-0.7290503881876362,-0.11492000000000001,0.3044368416109271,1.9674275598429376,-2.2260150226690767]
  global gGD_1_LM_RXF=p[0.02413503458160308,-0.74534,-0.11578000000000001,0.2411332216392182,1.7407173006243832,-2.3674279033231747]
  global gGD_1_M=p[0.023469999999999998,-0.72661,-0.11456000000000001,-0.029570847824802682,-3.12419917405015,-0.3106340785404749]
  global gGD_1_M_RX=p[0.023469999999999998,-0.7267389086136226,-0.11653,-0.01497665825746678,-2.067091763806016,2.343829767295237]
  global gGD_1_M_RXF=p[0.02415523713330076,-0.7453200000000001,-0.11578426509069895,-0.012477314995716382,-1.853515977408631,2.515027308648709]
  global gGD_1_RM=p[0.023629999999999998,-0.72653,-0.11331000000000001,-0.06253229749015264,-2.8808212567082414,-0.28238046714011755]
  global gGD_1_RM_RX=p[0.023710000000000002,-0.7266791760279572,-0.11328,0.25928042729790574,-1.9492131299374433,2.2165015837642534]
  global gGD_1_RM_RXF=p[0.024158234647744328,-0.74536,-0.11577,0.21548497967238725,-1.726437707763004,2.3373117534316665]
  global gGD_2_LM=p[0.02467,-0.67055,-0.11509,-0.010179461791212513,2.870955921048522,0.2878734195391217]
  global gGD_2_LM_RX=p[0.02557,-0.68251,-0.11613,0.30453279352571483,1.9672981330077381,-2.226392127453131]
  global gGD_2_LM_RXF=p[0.02518,-0.6822999999999999,-0.11982,0.24121310672797797,1.7407223643292684,-2.3672997334921986]
  global gGD_2_M=p[0.02389,-0.6721900000000001,-0.11456000000000001,-0.029666521928107308,-3.1243201149134068,-0.3098990972493868]
  global gGD_2_M_RX=p[0.02484,-0.68243,-0.11546,-0.015063934478793627,-2.0663275476865888,2.344461227887929]
  global gGD_2_M_RXF=p[0.02469,-0.68228,-0.11781,-0.012625584579695818,-1.8536977166603092,2.514979910589354]
  global gGD_2_RM=p[0.02429,-0.66916,-0.11353,-0.06253008389277029,-2.880917079483223,-0.28230802316028863]
  global gGD_2_RM_RX=p[0.0258,-0.68425,-0.11501,0.25908883302963964,-1.9492848312687396,2.2164021849911264]
  global gGD_2_RM_RXF=p[0.02418,-0.68221,-0.11985,0.21545635593876583,-1.7267658137434814,2.337110041109278]
  global gGD_3_LM=p[0.024149999999999998,-0.63442,-0.00372,-0.010168641563882792,2.8709293839329573,0.28786844960240987]
  global gGD_3_LM_RX=p[0.02405510221960326,-0.6345056914174558,-0.0037499005033911903,0.30445065222254053,1.9670763969437823,-2.226506244343227]
  global gGD_3_LM_RXF=p[0.02387752228160463,-0.5964211774687285,-0.05792315514989682,0.2704410553277331,1.9481847980902196,-2.214876983085744]
  global gGD_3_M=p[0.023940000000000003,-0.63613,-0.00522,-0.029962916255114207,-3.1241595671421933,-0.3100480455299553]
  global gGD_3_M_RX=p[0.023892083497275084,-0.636207529577613,-0.005232092584449288,-0.014884341975866014,-2.0665349875133034,2.3438869159014475]
  global gGD_3_M_RXF=p[0.02383447419609676,-0.5964085561522618,-0.0579509198373786,-0.014600929068906539,-2.066655165579624,2.3438719244209403]
  global gGD_3_RM=p[0.02428,-0.6347200000000001,-0.00846,-0.0624152449577923,-2.8809080008278345,-0.2823877130468296]
  global gGD_3_RM_RX=p[0.024184402081577627,-0.6347360922741174,-0.008457806969526915,0.2593579366565913,-1.949476712353103,2.2162798861233246]
  global gGD_3_RM_RXF=p[0.023773322279514588,-0.5964087734876792,-0.05795139315103717,0.24060086319727583,-1.933030903056379,2.187075285864524]
  global gGD_4_LM=p[-0.12534109989305553,-0.6345452257364079,-0.003660409912739915,-0.010209507081901941,2.87092276677584,0.2878514545752189]
  global gGD_4_LM_RX=p[-0.12533199352487323,-0.6346108123799734,-0.003643920282847657,0.304552460658092,1.9670859988240124,-2.226395027960848]
  global gGD_4_RM=p[0.1741356102640685,-0.6348673415405857,-0.008407071546374267,-0.06250935255312234,-2.8810578033032743,-0.28204363282303685]
  global gHome_Position=p[-0.0028799999999999997,-0.33081,0.1087,-0.02099958342773921,-3.141491282453575,3.986162810876369E-4]
  global gTAIHI_pos1=p[0.034435296708333146,-0.2890869270984411,0.28697762766096685,-0.9517096680276043,2.9907327255336362,-0.006242657270483182]
  global gTAIHI_pos2=p[0.46041690381401934,0.09562026346103787,0.3409455343940188,-2.575428180750575,1.7504967205574518,-0.009370784990557466]
  global gTAIHI_pos3=p[0.4777514786587304,0.10855417509450788,0.25667938190447326,-3.115092130529677,-0.059113053813058626,0.017060902648732133]
  global gTAIHI_pos4=p[0.47773948064032057,0.10853581553326999,-0.15133852019421468,-3.1151611852917296,-0.05914313994407087,0.017149581050184888]
  global gTAIHI_pos5=p[0.30588450070104545,0.17870028478253597,-0.38750721344025674,-3.115302721311487,-0.05927431563397507,0.01725874757592571]
  global p0507=p[-0.335,-0.29,0.4,2.152000000000002,2.200000000000002,-0.08999999999999687]
  rtde_set_watchdog("speed_slider_mask", 10.0, "ignore")
  # begin: URCap Installation Node
  #   Source: Ethernet/IP I/O Monitor URCap, 1.0.0, 
  #   Type: Ethernet/IP I/O Monitor
  conn = rpc_factory("xmlrpc", "http://127.0.0.1:" + to_str(61101) + "/RPC2")
  
  def show_monitor():
    return conn.eip_monitor.show()
  end
  # end: URCap Installation Node
  global tm_104=0
  global tm_handin=0
  global tm_steady_104=0
  global u12454u12455u12452u12509u12452u12531u12488_3_from_p=p[-.335019588584, -.289975007114, .399985554851, -2.196200212503, -2.246385363098, -.000059430764]
  global u12454u12455u12452u12509u12452u12531u12488_3_to_p=p[-.335069456830, -.289996117888, .400008166038, 2.152127814879, 2.200006045058, -.090079174744]
  global tm_104_is_counting=False
  global tm_steady_104_is_counting=False
  global tm_handin_is_counting=False
  thread Timer_Thread():
    while (True):
      if (tm_104_is_counting):
        tm_104 = tm_104 + get_steptime()
      end
      if (tm_steady_104_is_counting):
        tm_steady_104 = tm_steady_104 + get_steptime()
      end
      if (tm_handin_is_counting):
        tm_handin = tm_handin + get_steptime()
      end
      sync()
    end
  end
  run Timer_Thread()
  $ 2 "ロボットプログラム"
  $ 3 "SET_BUCKET()"
  SET_BUCKET()
  $ 4 "ROVI_CAPTURE"
  $ 5 "If文 ( not ROVI_CAPTURE())"
  if ((  not  ROVI_CAPTURE())):
    $ 6 "SubPrgResult:=rovi_err"
    global SubPrgResult=rovi_err
    $ 7 "待機: 999999.0"
    sleep(999999.0)
  end
  $ 8 "CandCnt:=Y1[0]"
  global CandCnt=Y1[0]
  $ 9 "DistPillar:=Y1[1] / 1000.0"
  global DistPillar=Y1[1] / 1000.0
  $ 10 "LevelZ:=Y1[2] / 1000.0"
  global LevelZ=Y1[2] / 1000.0
  $ 11 "NeighborZ:=Y1[3] / 1000.0"
  global NeighborZ=Y1[3] / 1000.0
  $ 12 "If文 (GPII_PrgNo==1201)"
  if ((read_input_integer_register(0)==1201)):
    $ 13 "DistPillarBak:=DistPillar"
    global DistPillarBak=DistPillar
  end
  $ 14 "If文 (CandCnt<1)"
  if ((CandCnt<1)):
    $ 15 "SubPrgResult:=990"
    global SubPrgResult=990
    $ 16 "待機: 999999.0"
    sleep(999999.0)
  end
  $ 17 "ROVI_SOLVE"
  $ 18 "If文 (CandCnt>0)"
  if ((CandCnt>0)):
    $ 19 "Y2:=ROVI_SOLVE()"
    global Y2=ROVI_SOLVE()
    $ 20 "If文 (Y2[0]≟10000.)"
    if ((Y2[0] == 10000.)):
      $ 21 "SubPrgResult:=rovi_err"
      global SubPrgResult=rovi_err
      $ 22 "待機: 999999.0"
      sleep(999999.0)
    end
  end
  $ 23 "UF:=Y2"
  global UF=Y2
  $ 24 "PICK"
  $ 25 "荷重の設定: k10"
  set_target_payload(0.100000, [0.135000, 0.000000, 0.225000], [10.000000, 10.000000, 10.000000, 0.000000, 0.000000, 0.000000])
  $ 26 "v=pose_trans(pose_inv(pBucket[1]), CaptPoint_L)"
  v= pose_trans ( pose_inv (pBucket[1]), CaptPoint_L)
  $ 27 "MoveL"
  $ 28 "ウェイポイント_3" "breakAfter"
  set_tcp(p[0.0,0.08,0.42,0.0,0.0,0.0])
  movel(pose_add(get_target_tcp_pose(), pose_sub(u12454u12455u12452u12509u12452u12531u12488_3_to_p, u12454u12455u12452u12509u12452u12531u12488_3_from_p)), a=0.14, v=0.4)
  $ 29 "gGD_4_LM" "breakAfter"
  set_tcp(p[0.0,0.08,0.42,0.0,0.0,0.0])
  movel(pose_trans(UF, gGD_4_LM), a=0.14, v=0.4)
  $ 30 "MoveL"
  $ 31 "gGD_3_LM_RX" "breakAfter"
  set_tcp(p[0.0,0.08,0.42,1.8940313042642463,0.0,0.0])
  movel(pose_trans(UF, gGD_3_LM_RX), a=0.14, v=0.4)
  $ 32 "gGD_2_LM_RX" "breakAfter"
  set_tcp(p[0.0,0.08,0.42,1.8940313042642463,0.0,0.0])
  movel(pose_trans(UF, gGD_2_LM_RX), a=0.14, v=0.4)
  $ 33 "設定 GPBO_BLStop=HI:Pulse 1.0"
  thread SinglePulse663():
    write_output_boolean_register(14, True)
    sleep(1.0)
    write_output_boolean_register(14, False)
  end
  singlePulse663 = run SinglePulse663()
  $ 34 "待機: 0.5"
  sleep(0.5)
  $ 36 "If文 (0≤DistPillar and DistPillar≤DistPillarAPTh)"
  if ((0 <= DistPillar  and  DistPillar <= DistPillarAPTh)):
    $ 37 "MoveL"
    $ 38 "ウェイポイント_3" "breakAfter"
    set_tcp(p[0.0,0.08,0.42,0.0,0.0,0.0])
    movel(pose_add(get_target_tcp_pose(), pose_sub(u12454u12455u12452u12509u12452u12531u12488_3_to_p, u12454u12455u12452u12509u12452u12531u12488_3_from_p)), a=0.14, v=0.4)
    $ 39 "gGD_4_LM" "breakAfter"
    set_tcp(p[0.0,0.08,0.42,0.0,0.0,0.0])
    movel(pose_trans(UF, gGD_4_LM), a=0.14, v=0.4)
    $ 40 "MoveL"
    $ 41 "gGD_3_LM_RX" "breakAfter"
    set_tcp(p[0.0,0.08,0.42,1.8940313042642463,0.0,0.0])
    movel(pose_trans(UF, gGD_3_LM_RX), a=0.14, v=0.4)
    $ 42 "gGD_2_LM_RX" "breakAfter"
    set_tcp(p[0.0,0.08,0.42,1.8940313042642463,0.0,0.0])
    movel(pose_trans(UF, gGD_2_LM_RX), a=0.14, v=0.4)
    $ 43 "設定 GPBO_BLStop=HI:Pulse 1.0"
    thread SinglePulse664():
      write_output_boolean_register(14, True)
      sleep(1.0)
      write_output_boolean_register(14, False)
    end
    singlePulse664 = run SinglePulse664()
    $ 44 "待機: 0.5"
    sleep(0.5)
    $ 46 "tm_handin: リセット"
    tm_handin = 0
    $ 47 "tm_handin: 起動"
    tm_handin_is_counting = True
    $ 48 "設定 DO[1]=オン"
    set_standard_digital_out(1, True)
    $ 49 "フォース"
    sleep(0.02)
    zero_ftsensor()
    force_mode(tool_pose(), [1, 1, 1, 0, 0, 0], [0.0, 0.0, 20.0, 0.0, 0.0, 0.0], 2, [0.005, 0.005, 0.04, 0.3490658503988659, 0.3490658503988659, 0.3490658503988659])
    $ 50 "待機 ((Currpos_p_UF0[1]≤(gGD_2_LM_RX[1]-HandInZ)) or (tm_handin>GPII_TMHandIn))" "noBreak"
    while (not(((Currpos_p_UF0[1] <= (gGD_2_LM_RX[1]-HandInZ))  or  (tm_handin>read_input_integer_register(12))))):
      sync()
    end
    end_force_mode()
    stopl(5.0)
    $ 51 "tm_handin: 停止"
    tm_handin_is_counting = False
    $ 52 "設定 GPBO_BLStart=HI:Pulse 1.0"
    thread SinglePulse665():
      write_output_boolean_register(15, True)
      sleep(1.0)
      write_output_boolean_register(15, False)
    end
    singlePulse665 = run SinglePulse665()
    $ 53 "設定 DO[1]=オフ"
    set_standard_digital_out(1, False)
  else:
    $ 54 "ElseIf (-DistPillarAPTh≤DistPillar and DistPillar≤0)"
    if ((-DistPillarAPTh <= DistPillar  and  DistPillar <= 0)):
      $ 55 "MoveL"
      $ 56 "gGD_4_RM" "breakAfter"
      set_tcp(p[0.0,0.08,0.42,0.0,0.0,0.0])
      movel(pose_trans(UF, gGD_4_RM), a=0.07, v=0.4)
      $ 57 "MoveL"
      $ 58 "gGD_3_RM_RX" "breakAfter"
      set_tcp(p[0.0,0.08,0.42,1.8940313042642463,0.0,0.0])
      movel(pose_trans(UF, gGD_3_RM_RX), a=0.07, v=0.4)
      $ 59 "gGD_2_RM_RX" "breakAfter"
      set_tcp(p[0.0,0.08,0.42,1.8940313042642463,0.0,0.0])
      movel(pose_trans(UF, gGD_2_RM_RX), a=0.07, v=0.4)
      $ 60 "設定 GPBO_BLStop=HI:Pulse 1.0"
      thread SinglePulse666():
        write_output_boolean_register(14, True)
        sleep(1.0)
        write_output_boolean_register(14, False)
      end
      singlePulse666 = run SinglePulse666()
      $ 61 "待機: 0.5"
      sleep(0.5)
      $ 63 "tm_handin: リセット"
      tm_handin = 0
      $ 64 "tm_handin: 起動"
      tm_handin_is_counting = True
      $ 65 "設定 DO[1]=オン"
      set_standard_digital_out(1, True)
      $ 66 "フォース"
      sleep(0.02)
      zero_ftsensor()
      force_mode(tool_pose(), [1, 1, 1, 0, 0, 0], [0.0, 0.0, 20.0, 0.0, 0.0, 0.0], 2, [0.005, 0.005, 0.04, 0.3490658503988659, 0.3490658503988659, 0.3490658503988659])
      $ 67 "待機 ((Currpos_p_UF0[1]≤(gGD_2_RM_RX[1]-HandInZ)) or (tm_handin>GPII_TMHandIn))" "noBreak"
      while (not(((Currpos_p_UF0[1] <= (gGD_2_RM_RX[1]-HandInZ))  or  (tm_handin>read_input_integer_register(12))))):
        sync()
      end
      end_force_mode()
      stopl(5.0)
      $ 68 "tm_handin: 停止"
      tm_handin_is_counting = False
      $ 69 "設定 GPBO_BLStart=HI:Pulse 1.0"
      thread SinglePulse667():
        write_output_boolean_register(15, True)
        sleep(1.0)
        write_output_boolean_register(15, False)
      end
      singlePulse667 = run SinglePulse667()
      $ 70 "設定 DO[1]=オフ"
      set_standard_digital_out(1, False)
    else:
      $ 71 "Else" "noBreak"
      $ 72 "MoveL"
      $ 73 "gGD_3_M_RX" "breakAfter"
      set_tcp(p[0.0,0.08,0.42,1.8940313042642463,0.0,0.0])
      movel(pose_trans(UF, gGD_3_M_RX), a=0.07, v=0.4)
      $ 74 "gGD_2_M_RX" "breakAfter"
      set_tcp(p[0.0,0.08,0.42,1.8940313042642463,0.0,0.0])
      movel(pose_trans(UF, gGD_2_M_RX), a=0.07, v=0.4)
      $ 75 "設定 GPBO_BLStop=HI:Pulse 1.0"
      thread SinglePulse668():
        write_output_boolean_register(14, True)
        sleep(1.0)
        write_output_boolean_register(14, False)
      end
      singlePulse668 = run SinglePulse668()
      $ 76 "待機: 0.5"
      sleep(0.5)
      $ 78 "tm_handin: リセット"
      tm_handin = 0
      $ 79 "tm_handin: 起動"
      tm_handin_is_counting = True
      $ 80 "設定 DO[1]=オン"
      set_standard_digital_out(1, True)
      $ 81 "フォース"
      sleep(0.02)
      zero_ftsensor()
      force_mode(tool_pose(), [1, 1, 1, 0, 0, 0], [0.0, 0.0, 20.0, 0.0, 0.0, 0.0], 2, [0.005, 0.005, 0.04, 0.3490658503988659, 0.3490658503988659, 0.3490658503988659])
      $ 82 "ShakeCnt:=-1" "noBreak"
      global ShakeCnt=-1
      $ 83 "ループ ((Currpos_p_UF0[1]>(gGD_2_M_RX[1]-HandInZ)) and (tm_handin<GPII_TMHandIn))" "noBreak"
      while (((Currpos_p_UF0[1]>(gGD_2_M_RX[1]-HandInZ))  and  (tm_handin<read_input_integer_register(12)))):
        $ 84 "If文 ShakeCnt<0" "noBreak"
        if (ShakeCnt<0):
          $ 85 "NOT_SHAKE" "noBreak"
          $ 86 "tm_104: 起動" "noBreak"
          tm_104_is_counting = True
          $ 87 "待機 tm_104>ShakeWaitSec" "noBreak"
          while (not(tm_104>ShakeWaitSec)):
            sync()
          end
          $ 88 "tm_104: 停止" "noBreak"
          tm_104_is_counting = False
          $ 89 "tm_104: リセット" "noBreak"
          tm_104 = 0
          $ 90 "ShakeCnt:=0" "noBreak"
          global ShakeCnt=0
        end
        $ 91 "IsShake:= False " "noBreak"
        global IsShake=  False  
        $ 92 "MONITOR_SPEED" "noBreak"
        $ 93 "tm_104: リセット" "noBreak"
        tm_104 = 0
        $ 94 "If文 norm(TCPSpeed[1])<TCPSpeedThZ" "noBreak"
        if (norm(TCPSpeed[1])<TCPSpeedThZ):
          $ 95 "IsShake:= True " "noBreak"
          global IsShake=  True  
          $ 96 "If文 ShakeCnt≟0" "noBreak"
          if (ShakeCnt == 0):
            $ 97 "tm_104: 起動" "noBreak"
            tm_104_is_counting = True
            $ 98 "ループ ((tm_104<1.0) and (IsShake≟ True ))" "noBreak"
            while (((tm_104<1.0)  and  (IsShake ==   True  ))):
              $ 99 "If文 norm(TCPSpeed[1])≥TCPSpeedThZ" "noBreak"
              if (norm(TCPSpeed[1]) >= TCPSpeedThZ):
                $ 100 "IsShake:= False " "noBreak"
                global IsShake=  False  
              end
            end
            $ 101 "tm_104: 停止" "noBreak"
            tm_104_is_counting = False
          end
          $ 102 "ShakeCnt:=ShakeCnt+1" "noBreak"
          global ShakeCnt=ShakeCnt+1
        end
        $ 103 "SHAKE" "noBreak"
        $ 104 "If文 IsShake" "noBreak"
        if (IsShake):
          $ 105 "Sub3100_Option:=7" "noBreak"
          global Sub3100_Option=7
          $ 106 "ループ2回" "noBreak"
          u12523u12540u12503_4 = 0
          while (u12523u12540u12503_4 < 2):
            $ 107 "'7:RX+,8:RX-,9:RY+,10:RY-,11:RZ+,12:RZ-'" "noBreak"
            # '7:RX+,8:RX-,9:RY+,10:RY-,11:RZ+,12:RZ-'
            $ 108 "Sub3100_Xd:=[0.,0.,0.,0.,0.,0.]" "noBreak"
            global Sub3100_Xd=[0.,0.,0.,0.,0.,0.]
            $ 109 "Sub3100_q:=floor((Sub3100_Option-1) / 2)" "noBreak"
            global Sub3100_q=floor((Sub3100_Option-1) / 2)
            $ 110 "Sub3100_e:=1-((Sub3100_Option-1) % 2)*2" "noBreak"
            global Sub3100_e=1-((Sub3100_Option-1) % 2)*2
            $ 111 "Sub3100_t:=0.2" "noBreak"
            global Sub3100_t=0.2
            $ 112 "Sub3100_Xd[Sub3100_q]=d2r(Sub3100_XdRot/2.0)*Sub3100_e" "noBreak"
            Sub3100_Xd[Sub3100_q]= d2r (Sub3100_XdRot/2.0)*Sub3100_e
            $ 113 "speedl(Sub3100_Xd,Sub3100_aRot/2.0,Sub3100_t)" "noBreak"
            speedl(Sub3100_Xd,Sub3100_aRot/2.0,Sub3100_t)
            $ 114 "If文 Sub3100_Option≟7" "noBreak"
            if (Sub3100_Option == 7):
              $ 115 "Sub3100_Option:=8" "noBreak"
              global Sub3100_Option=8
            else:
              $ 116 "Else" "noBreak"
              $ 117 "Sub3100_Option:=7" "noBreak"
              global Sub3100_Option=7
            end
            $ 118 "待機: 0.1" "noBreak"
            sleep(0.1)
            u12523u12540u12503_4 = u12523u12540u12503_4 + 1
          end
          $ 119 "IsShake:= False " "noBreak"
          global IsShake=  False  
        end
        $ 120 "待機: 0.1" "noBreak"
        sleep(0.1)
      end
      end_force_mode()
      stopl(5.0)
      $ 121 "設定 DO[1]=オフ"
      set_standard_digital_out(1, False)
      $ 122 "tm_handin: 停止"
      tm_handin_is_counting = False
      $ 123 "設定 GPBO_BLStart=HI:Pulse 1.0"
      thread SinglePulse669():
        write_output_boolean_register(15, True)
        sleep(1.0)
        write_output_boolean_register(15, False)
      end
      singlePulse669 = run SinglePulse669()
    end
  end
  $ 127 "tm_steady_104: リセット"
  tm_steady_104 = 0
  $ 128 "tm_steady_104: 起動"
  tm_steady_104_is_counting = True
  $ 129 "待機 is_steady()"
  while (not(is_steady())):
    sync()
  end
  $ 130 "tm_steady_104: 停止"
  tm_steady_104_is_counting = False
  $ 132 "If文 ( not GPBI_WorkExists)"
  if ((  not  read_input_boolean_register(9))):
    $ 133 "If文 (0≤DistPillar and DistPillar≤DistPillarAPTh)"
    if ((0 <= DistPillar  and  DistPillar <= DistPillarAPTh)):
      $ 134 "MoveL"
      $ 135 "gGD_2_LM_RX" "breakAfter"
      set_tcp(p[0.0,0.08,0.42,1.8940313042642463,0.0,0.0])
      movel(pose_trans(UF, gGD_2_LM_RX), a=0.14, v=0.4)
      $ 136 "gGD_3_LM_RX" "breakAfter"
      set_tcp(p[0.0,0.08,0.42,1.8940313042642463,0.0,0.0])
      movel(pose_trans(UF, gGD_3_LM_RX), a=0.14, v=0.4)
      $ 137 "MoveL"
      $ 138 "gGD_4_LM" "breakAfter"
      set_tcp(p[0.0,0.08,0.42,0.0,0.0,0.0])
      movel(pose_trans(UF, gGD_4_LM), a=0.14, v=0.4)
    else:
      $ 139 "ElseIf (-DistPillarAPTh≤DistPillar and DistPillar≤0)"
      if ((-DistPillarAPTh <= DistPillar  and  DistPillar <= 0)):
        $ 140 "MoveL"
        $ 141 "gGD_2_RM_RX" "breakAfter"
        set_tcp(p[0.0,0.08,0.42,1.8940313042642463,0.0,0.0])
        movel(pose_trans(UF, gGD_2_RM_RX), a=0.07, v=0.4)
        $ 142 "gGD_3_RM_RX" "breakAfter"
        set_tcp(p[0.0,0.08,0.42,1.8940313042642463,0.0,0.0])
        movel(pose_trans(UF, gGD_3_RM_RX), a=0.07, v=0.4)
        $ 143 "MoveL"
        $ 144 "gGD_4_RM" "breakAfter"
        set_tcp(p[0.0,0.08,0.42,0.0,0.0,0.0])
        movel(pose_trans(UF, gGD_4_RM), a=0.07, v=0.4)
      else:
        $ 145 "Else" "noBreak"
        $ 146 "MoveL"
        $ 147 "gGD_2_M_RX" "breakAfter"
        set_tcp(p[0.0,0.08,0.42,1.8940313042642463,0.0,0.0])
        movel(pose_trans(UF, gGD_2_M_RX), a=0.07, v=0.4)
        $ 148 "gGD_3_M_RX" "breakAfter"
        set_tcp(p[0.0,0.08,0.42,1.8940313042642463,0.0,0.0])
        movel(pose_trans(UF, gGD_3_M_RX), a=0.07, v=0.4)
      end
    end
    $ 149 "荷重の設定: k25"
    set_target_payload(0.100000, [0.135000, 0.000000, 0.255000], [25.000000, 25.000000, 25.000000, 0.000000, 0.000000, 0.000000])
    $ 150 "ROVI_CAPTURE"
    $ 151 "CaptPos:=GET_CAPTPOS()"
    global CaptPos=GET_CAPTPOS()
    $ 152 "MoveL"
    $ 153 "CaptPos" "breakAfter"
    set_tcp(p[0.0,0.08,0.42,0.0,0.0,0.0])
    movel(pose_trans(Bucket, CaptPos), a=0.14, v=0.4)
    $ 154 "待機: 1.0"
    sleep(1.0)
    $ 155 "SubPrgResult:=821"
    global SubPrgResult=821
    $ 156 "待機: 999999.0"
    sleep(999999.0)
  end
end
