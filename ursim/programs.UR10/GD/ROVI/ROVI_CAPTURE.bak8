def ROVI_CAPTURE():
#  p=get_actual_tool_flange_pose()
  p=Bucket
  socket_open(host,port,socket_name)
  socket_send_string("X1(",socket_name)
  socket_send_string(p[0],socket_name)
  socket_send_string(",",socket_name)
  socket_send_string(p[1],socket_name)
  socket_send_string(",",socket_name)
  socket_send_string(p[2],socket_name)
  socket_send_string(",",socket_name)
  socket_send_string(p[3],socket_name)
  socket_send_string(",",socket_name)
  socket_send_string(p[4],socket_name)
  socket_send_string(",",socket_name)
  socket_send_string(p[5],socket_name)
  socket_send_line(")",socket_name)
  ret=socket_read_line(socket_name,socket_timeout)
  if (ret == "OK"):
    rovi_err=0
#    popup(socket_read_line(socket_name,socket_timeout),title="X1",warning=False,blocking=True)
#    s=socket_read_line(socket_name,socket_timeout)
#    popup(s,title="X1",warning=False,blocking=True)
#    CandCnt=to_num(str_sub(s,0,str_find(s,",")))
    f=socket_read_ascii_float(4,socket_name,socket_timeout)
    while (f[0]!=4):
      sleep(0.3)
      f=socket_read_ascii_float(4,socket_name,socket_timeout)
    end
    CandCnt=f[1]
    DistPillar=f[2]
  elif (ret == "NG"):
    rovi_err=to_num(socket_read_line(socket_name,socket_timeout))
  else:
    ret="NG"
    rovi_err=-1
    CandCnt=0
  end
  socket_close(socket_name)
  if (rovi_err != 0):
    if (is_popup):
      popup(str_cat(ret,rovi_err),title="X1",warning=True,blocking=True)
    end
    return False
  else:
    return True
  end
end
